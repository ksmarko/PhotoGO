@model PagedList.IPagedList<Web.Models.ImageModel>
@using PagedList.Mvc;


<div class="loader" id="loader" style="display:block"></div>
<div id="bodycontent" style="display:none">

    <div class="row">
        @foreach (var img in Model)
        {
            <div class="col-md-2">
                <div class="thumbnail">
                    <a data-trigger="preview" href="data:image;base64,@System.Convert.ToBase64String(img.Img)" data-fancybox="preview">
                        <img src="data:image;base64,@System.Convert.ToBase64String(img.Img)" style="height:200px; width:200px">
                    </a>
                    <p>
                        @foreach (var tag in img.Tags)
                        {
                            <a href="@Url.Action("Search", "Images", new { tag = tag })">@tag</a>
                        }
                    </p>
                        <p>
                            <button data-link="/Images/Like/@img.Id" class="btn btn-default like-button">
                                @if (img.IsLiked)
                                {<i class="fa fa-heart" style="color: #cf0020"></i> }
                                else
                                { <i class="fa fa-heart" style="color: #000000"></i>}
                                <span>@img.Likes</span>
                            </button>

                            @if (img.IsMy)
                            {
                                <button class="btn btn-link modal-link fa fa-trash" title="Remove" data-link="/Images/RemoveImage/@img.Id"></button>
                            }
                        </p>
                </div>
            </div>
        }
    </div>

        @Html.PagedListPager(Model, page => Url.Action("Favourites", "Images", new { page }))

</div>

<script type="text/javascript">
    window.onload = function () {
        document.getElementById("loader").style.display = "none";
        document.getElementById("bodycontent").style.display = "block";
    };
</script>